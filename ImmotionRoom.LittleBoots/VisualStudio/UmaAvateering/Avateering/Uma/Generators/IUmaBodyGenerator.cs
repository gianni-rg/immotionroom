namespace ImmotionAR.ImmotionRoom.LittleBoots.Avateering.Uma.Generators
{
    using ImmotionAR.ImmotionRoom.LittleBoots.Avateering;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using UnityEngine;

    /// <summary>
    /// Basic interface for objects that are able to create Uma-like avatars that are avatareerable using the elements inside this package
    /// </summary>
    public interface IUmaBodyGenerator
    {
        /// <summary>
        /// Generates a UMA-like avatar
        /// </summary>
        /// <param name="umaAvatar">Out parameter, receiving the just created UMA-compatible avatar</param>
        /// <param name="jointsMapping">Out parameter, receiving the joint mappings for the created uma avatar</param>
        /// <param name="jointsGlobalTRotationMapping">Out parameter, receiving the joint to-T-rotation mappings for the created uma avatar</param>
        void GenerateAvatar(out GameObject umaAvatar, out IDictionary<UmaJointTypes, string> jointsMapping, out IDictionary<UmaJointTypes, Quaternion> jointsGlobalTRotationMapping);

        /// <summary>
        /// Get a UMA Bridge object, capable of moving UMA Dna Sliders on the Avatar
        /// </summary>
        /// <param name="umaInstanceGo">Avatar instance, generated by this generator, which we want to match with user's body</param>
        /// <returns>UMA Bridge object</returns>
        IUmaPhysioMatchingBridge GetUmaMatchingBridge(GameObject umaInstanceGo);
    }
}
